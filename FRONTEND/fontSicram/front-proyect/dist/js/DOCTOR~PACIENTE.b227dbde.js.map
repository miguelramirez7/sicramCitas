{"version":3,"sources":["webpack:///../../../src/components/VSkeletonLoader/VSkeletonLoader.ts","webpack:///../../../../src/components/VCalendar/mixins/mouse.ts","webpack:///../../../../src/components/VCalendar/mixins/times.ts","webpack:///../../../../src/components/VCalendar/modes/common.ts","webpack:///../../../../src/components/VCalendar/modes/stack.ts","webpack:///../../../../src/components/VCalendar/modes/column.ts","webpack:///../../../../src/components/VCalendar/modes/index.ts","webpack:///../../../../src/components/VCalendar/util/props.ts","webpack:///../../../../src/components/VCalendar/mixins/calendar-base.ts","webpack:///../../../../src/components/VCalendar/util/events.ts","webpack:///../../../../src/components/VCalendar/mixins/calendar-with-events.ts","webpack:///../../../src/components/VCalendar/VCalendarWeekly.ts","webpack:///../../../src/components/VCalendar/VCalendarMonthly.ts","webpack:///../../../../src/components/VCalendar/mixins/calendar-with-intervals.ts","webpack:///../../../src/components/VCalendar/VCalendarDaily.ts","webpack:///../../../src/components/VCalendar/VCalendarCategory.ts","webpack:///../../../src/components/VCalendar/VCalendar.ts","webpack:///./node_modules/core-js/modules/es.number.max-safe-integer.js"],"names":["name","props","boilerplate","loading","tile","transition","type","types","default","computed","attrs","this","role","$attrs","classes","elevationClasses","isLoading","rootTypes","actions","article","avatar","button","card","chip","heading","image","paragraph","sentences","table","text","methods","genBone","$createElement","staticClass","genBones","bone","generator","Array","length","genStructure","children","mapBones","genSkeleton","on","afterEnter","beforeEnter","beforeLeave","leaveCancelled","resetStyles","bones","onBeforeEnter","el","display","onBeforeLeave","render","h","class","style","undefined","getDefaultMouseEventHandlers","getMouseEventHandlers","event","prevent","result","eventOptions","events","prefix","key","handler","e","mouseEvent","getEvent","now","validator","data","times","today","parsedNow","watch","created","setPresent","present","past","future","updateTimes","getNow","updateDay","target","updateTime","MILLIS_IN_DAY","minStart","visuals","columnCount","column","left","width","Math","a","b","exclude","s0","e0","groups","group","groupVisual","dayStart","i","intersected","hasOverlap","start","end","k","timed","getRange","getDayRange","groupStart","groupEnd","min","max","reset","getVisuals","day","dayEvents","visual","setColumnCount","targetGroup","getOpenGroup","FULL_WIDTH","DEFAULT_OFFSET","WIDTH_MULTIPLIER","firstWeekday","overlapThreshold","getOverlapGroupHandler","getGroups","nodes","child","getNode","index","getNextIndex","parent","getParent","addTime","getOverlappingRange","grand","grandNext","calculateBounds","columns","getMaxChildIndex","spaceLeft","spaceWidth","offset","columnWidthMultiplier","getColumnWidthMultiplier","node","columnOffset","columnWidth","hasFullWidth","maxColumn","minColumn","c","getOverlappingIndices","indices","other","returnFirstColumn","overlapping","first","n","getNormalizedRange","added","sibling","childMax","removeMinutes","identifier","totalMinutes","addHours","addMinutes","CalendarEventOverlapModes","stack","base","String","Number","validate","date","weekdays","validateWeekdays","hideHeader","Boolean","shortWeekdays","weekdayFormat","dayFormat","intervals","maxDays","shortIntervals","intervalHeight","validateNumber","intervalWidth","intervalMinutes","firstInterval","firstTime","intervalCount","intervalFormat","intervalStyle","showIntervalLabel","weeks","localeFirstDayOfYear","minWeeks","shortMonths","showMonthOnFirst","showWeek","monthFormat","calendar","value","category","categories","categoryHideDynamic","categoryShowAll","categoryForInvalid","categoryDays","x","isFinite","parseInt","eventStart","eventEnd","eventTimed","eventCategory","eventHeight","eventColor","eventTextColor","eventName","eventOverlapThreshold","eventOverlapMode","mode","eventMore","eventMoreText","eventRipple","eventMarginBottom","input","ints","visited","wrapped","d","mixins","directives","Resize","parsedWeekdays","weekdaySkips","weekdaySkipsReverse","reversed","reverse","parsedStart","parsedEnd","days","dayFormatter","options","timeZone","weekdayFormatter","longOptions","weekday","shortOptions","short","getRelativeClasses","outside","timestamp","getStartOfWeek","getEndOfWeek","getFormatter","startInput","endInput","startParsed","endParsed","startIdentifier","startTimestampIdentifier","endIdentifier","endOffset","endTimestampIdentifier","allDay","dayIdentifier","isEventOn","WIDTH_FULL","WIDTH_START","MINUTES_IN_DAY","ripple","noEvents","parsedEvents","map","parsedEventOverlapThreshold","eventColorFunction","eventTimedFunction","eventCategoryFunction","eventTextColorFunction","eventNameFunction","eventModeFunction","eventWeekdays","categoryMode","parseEvent","formatTime","formatter","hour","minute","withTime","updateEventVisibility","eventsMap","more","parentBounds","last","hide","hidden","eventBounds","$vuetify","lang","t","getEventsMap","elements","$refs","genDayEvent","week","weekdayIdentifier","scope","eventParsed","genEvent","height","ref","refInFor","genTimedEvent","top","bottom","slot","$scopedSlots","background","overlapsNoon","singline","timeSummary","eventSummary","time","delimiter","scopeInput","setTextColor","setBackgroundColor","nativeEvent","genName","domProps","innerHTML","genPlaceholder","genMore","click","getVisibleEvents","filter","isEventOverlapping","isEventForCategory","getEventsForDay","isEventStart","getEventsForDayAll","getEventsForDayTimed","getScopedSlots","isNode","getSlotChildren","getter","mapper","mapped","slots","slotDay","slotDayHeader","slotDayBody","parsedMinWeeks","minDays","todayWeek","monthFormatter","month","isOutside","genHead","genHeadDays","header","genHeadDay","color","genWeeks","weekDays","genWeek","getWeekNumber","weekNodes","genWeekNumber","determineDay","genDay","_e","genDayLabel","genDayLabelButton","hasMonth","VBtn","fab","depressed","small","stop","genDayMonth","dragstart","parsedFirstInterval","parsedIntervalMinutes","parsedIntervalCount","parsedIntervalHeight","parseFloat","parsedFirstTime","firstMinute","bodyHeight","minutes","count","intervalFormatter","shortHourOptions","tms","showIntervalLabelDefault","isFirst","interval","intervalStyleDefault","getTimestampAtEvent","bounds","baseMinutes","touchEvent","touches","clientY","addIntervals","getSlotScope","scrollToTime","y","timeToY","pane","minutesToPixels","clamp","timeDelta","gap","scrollPush","themeClasses","mounted","init","onResize","getScrollPush","area","marginRight","genHeadIntervals","genHeadWeekday","genHeadDayLabel","genDayHeader","genHeadDayButton","genBody","genScrollArea","genPane","genDayContainer","genDays","genDayIntervals","genDayBody","genDayInterval","styler","genBodyIntervals","genIntervalLabels","genIntervalLabel","shower","show","label","modifiers","quiet","parsedCategories","split","getCategoryScope","genDayHeaderCategory","genDayHeaderCategoryTitle","genDayBodyCategory","lastStart","lastEnd","parsedValue","parsedCategoryDays","renderProps","around","component","getCategoryList","Error","title","spanYears","spanMonths","monthShortFormatter","monthLongFormatter","updated","window","checkChange","move","amount","moved","forward","mover","limit","next","prev","$children","parseTimestamp","required","timestampToDate","categoryMap","Object","categoryLength","ev","scopedSlots","$","stat","MAX_SAFE_INTEGER"],"mappings":"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","file":"js/DOCTOR~PACIENTE.b227dbde.js","sourcesContent":["// Styles\nimport './VSkeletonLoader.sass'\n\n// Mixins\nimport Elevatable from '../../mixins/elevatable'\nimport Measurable from '../../mixins/measurable'\nimport Themeable from '../../mixins/themeable'\n\n// Utilities\nimport mixins from '../../util/mixins'\n\n// Types\nimport { VNode } from 'vue'\nimport { getSlot } from '../../util/helpers'\nimport { PropValidator } from 'vue/types/options'\n\nexport interface HTMLSkeletonLoaderElement extends HTMLElement {\n  _initialStyle?: {\n    display: string | null\n    transition: string\n  }\n}\n\n/* @vue/component */\nexport default mixins(\n  Elevatable,\n  Measurable,\n  Themeable,\n).extend({\n  name: 'VSkeletonLoader',\n\n  props: {\n    boilerplate: Boolean,\n    loading: Boolean,\n    tile: Boolean,\n    transition: String,\n    type: String,\n    types: {\n      type: Object,\n      default: () => ({}),\n    } as PropValidator<Record<string, string>>,\n  },\n\n  computed: {\n    attrs (): object {\n      if (!this.isLoading) return this.$attrs\n\n      return !this.boilerplate ? {\n        'aria-busy': true,\n        'aria-live': 'polite',\n        role: 'alert',\n        ...this.$attrs,\n      } : {}\n    },\n    classes (): object {\n      return {\n        'v-skeleton-loader--boilerplate': this.boilerplate,\n        'v-skeleton-loader--is-loading': this.isLoading,\n        'v-skeleton-loader--tile': this.tile,\n        ...this.themeClasses,\n        ...this.elevationClasses,\n      }\n    },\n    isLoading (): boolean {\n      return !('default' in this.$scopedSlots) || this.loading\n    },\n    rootTypes (): Record<string, string> {\n      return {\n        actions: 'button@2',\n        article: 'heading, paragraph',\n        avatar: 'avatar',\n        button: 'button',\n        card: 'image, card-heading',\n        'card-avatar': 'image, list-item-avatar',\n        'card-heading': 'heading',\n        chip: 'chip',\n        'date-picker': 'list-item, card-heading, divider, date-picker-options, date-picker-days, actions',\n        'date-picker-options': 'text, avatar@2',\n        'date-picker-days': 'avatar@28',\n        heading: 'heading',\n        image: 'image',\n        'list-item': 'text',\n        'list-item-avatar': 'avatar, text',\n        'list-item-two-line': 'sentences',\n        'list-item-avatar-two-line': 'avatar, sentences',\n        'list-item-three-line': 'paragraph',\n        'list-item-avatar-three-line': 'avatar, paragraph',\n        paragraph: 'text@3',\n        sentences: 'text@2',\n        table: 'table-heading, table-thead, table-tbody, table-tfoot',\n        'table-heading': 'heading, text',\n        'table-thead': 'heading@6',\n        'table-tbody': 'table-row-divider@6',\n        'table-row-divider': 'table-row, divider',\n        'table-row': 'table-cell@6',\n        'table-cell': 'text',\n        'table-tfoot': 'text@2, avatar@2',\n        text: 'text',\n        ...this.types,\n      }\n    },\n  },\n\n  methods: {\n    genBone (text: string, children: VNode[]) {\n      return this.$createElement('div', {\n        staticClass: `v-skeleton-loader__${text} v-skeleton-loader__bone`,\n      }, children)\n    },\n    genBones (bone: string): VNode[] {\n      // e.g. 'text@3'\n      const [type, length] = bone.split('@') as [string, number]\n      const generator = () => this.genStructure(type)\n\n      // Generate a length array based upon\n      // value after @ in the bone string\n      return Array.from({ length }).map(generator)\n    },\n    // Fix type when this is merged\n    // https://github.com/microsoft/TypeScript/pull/33050\n    genStructure (type?: string): any {\n      let children = []\n      type = type || this.type || ''\n      const bone = this.rootTypes[type] || ''\n\n      // End of recursion, do nothing\n      /* eslint-disable-next-line no-empty, brace-style */\n      if (type === bone) {}\n      // Array of values - e.g. 'heading, paragraph, text@2'\n      else if (type.indexOf(',') > -1) return this.mapBones(type)\n      // Array of values - e.g. 'paragraph@4'\n      else if (type.indexOf('@') > -1) return this.genBones(type)\n      // Array of values - e.g. 'card@2'\n      else if (bone.indexOf(',') > -1) children = this.mapBones(bone)\n      // Array of values - e.g. 'list-item@2'\n      else if (bone.indexOf('@') > -1) children = this.genBones(bone)\n      // Single value - e.g. 'card-heading'\n      else if (bone) children.push(this.genStructure(bone))\n\n      return [this.genBone(type, children)]\n    },\n    genSkeleton () {\n      const children = []\n\n      if (!this.isLoading) children.push(getSlot(this))\n      else children.push(this.genStructure())\n\n      /* istanbul ignore else */\n      if (!this.transition) return children\n\n      /* istanbul ignore next */\n      return this.$createElement('transition', {\n        props: {\n          name: this.transition,\n        },\n        // Only show transition when\n        // content has been loaded\n        on: {\n          afterEnter: this.resetStyles,\n          beforeEnter: this.onBeforeEnter,\n          beforeLeave: this.onBeforeLeave,\n          leaveCancelled: this.resetStyles,\n        },\n      }, children)\n    },\n    mapBones (bones: string) {\n      // Remove spaces and return array of structures\n      return bones.replace(/\\s/g, '').split(',').map(this.genStructure)\n    },\n    onBeforeEnter (el: HTMLSkeletonLoaderElement) {\n      this.resetStyles(el)\n\n      if (!this.isLoading) return\n\n      el._initialStyle = {\n        display: el.style.display,\n        transition: el.style.transition,\n      }\n\n      el.style.setProperty('transition', 'none', 'important')\n    },\n    onBeforeLeave (el: HTMLSkeletonLoaderElement) {\n      el.style.setProperty('display', 'none', 'important')\n    },\n    resetStyles (el: HTMLSkeletonLoaderElement) {\n      if (!el._initialStyle) return\n\n      el.style.display = el._initialStyle.display || ''\n      el.style.transition = el._initialStyle.transition\n\n      delete el._initialStyle\n    },\n  },\n\n  render (h): VNode {\n    return h('div', {\n      staticClass: 'v-skeleton-loader',\n      attrs: this.attrs,\n      on: this.$listeners,\n      class: this.classes,\n      style: this.isLoading ? this.measurableStyles : undefined,\n    }, [this.genSkeleton()])\n  },\n})\n","import Vue from 'vue'\n\nexport type MouseHandler = (e: MouseEvent | TouchEvent) => any\n\nexport type MouseEvents = {\n  [event: string]: {\n    event: string\n    passive?: boolean\n    capture?: boolean\n    once?: boolean\n    stop?: boolean\n    prevent?: boolean\n    button?: number\n    result?: any\n  }\n}\n\nexport type MouseEventsMap = {\n  [event: string]: MouseHandler | MouseHandler[]\n}\n\nexport default Vue.extend({\n  name: 'mouse',\n\n  methods: {\n    getDefaultMouseEventHandlers (suffix: string, getEvent: MouseHandler): MouseEventsMap {\n      return this.getMouseEventHandlers({\n        ['click' + suffix]: { event: 'click' },\n        ['contextmenu' + suffix]: { event: 'contextmenu', prevent: true, result: false },\n        ['mousedown' + suffix]: { event: 'mousedown' },\n        ['mousemove' + suffix]: { event: 'mousemove' },\n        ['mouseup' + suffix]: { event: 'mouseup' },\n        ['mouseenter' + suffix]: { event: 'mouseenter' },\n        ['mouseleave' + suffix]: { event: 'mouseleave' },\n        ['touchstart' + suffix]: { event: 'touchstart' },\n        ['touchmove' + suffix]: { event: 'touchmove' },\n        ['touchend' + suffix]: { event: 'touchend' },\n      }, getEvent)\n    },\n    getMouseEventHandlers (events: MouseEvents, getEvent: MouseHandler): MouseEventsMap {\n      const on: MouseEventsMap = {}\n\n      for (const event in events) {\n        const eventOptions = events[event]\n\n        if (!this.$listeners[event]) continue\n\n        // TODO somehow pull in modifiers\n\n        const prefix = eventOptions.passive ? '&' : ((eventOptions.once ? '~' : '') + (eventOptions.capture ? '!' : ''))\n        const key = prefix + eventOptions.event\n\n        const handler: MouseHandler = e => {\n          const mouseEvent: MouseEvent = e as MouseEvent\n          if (eventOptions.button === undefined || (mouseEvent.buttons > 0 && mouseEvent.button === eventOptions.button)) {\n            if (eventOptions.prevent) {\n              e.preventDefault()\n            }\n            if (eventOptions.stop) {\n              e.stopPropagation()\n            }\n            this.$emit(event, getEvent(e))\n          }\n\n          return eventOptions.result\n        }\n\n        if (key in on) {\n          /* istanbul ignore next */\n          if (Array.isArray(on[key])) {\n            (on[key] as MouseHandler[]).push(handler)\n          } else {\n            on[key] = [on[key], handler] as MouseHandler[]\n          }\n        } else {\n          on[key] = handler\n        }\n      }\n\n      return on\n    },\n  },\n})\n","import Vue from 'vue'\n\nimport {\n  validateTimestamp,\n  parseTimestamp,\n  parseDate,\n} from '../util/timestamp'\nimport { CalendarTimestamp } from 'vuetify/types'\n\nexport default Vue.extend({\n  name: 'times',\n\n  props: {\n    now: {\n      type: String,\n      validator: validateTimestamp,\n    },\n  },\n\n  data: () => ({\n    times: {\n      now: parseTimestamp('0000-00-00 00:00', true),\n      today: parseTimestamp('0000-00-00', true),\n    },\n  }),\n\n  computed: {\n    parsedNow (): CalendarTimestamp | null {\n      return this.now ? parseTimestamp(this.now, true) : null\n    },\n  },\n\n  watch: {\n    parsedNow: 'updateTimes',\n  },\n\n  created () {\n    this.updateTimes()\n    this.setPresent()\n  },\n\n  methods: {\n    setPresent (): void {\n      this.times.now.present = this.times.today.present = true\n      this.times.now.past = this.times.today.past = false\n      this.times.now.future = this.times.today.future = false\n    },\n    updateTimes (): void {\n      const now: CalendarTimestamp = this.parsedNow || this.getNow()\n      this.updateDay(now, this.times.now)\n      this.updateTime(now, this.times.now)\n      this.updateDay(now, this.times.today)\n    },\n    getNow (): CalendarTimestamp {\n      return parseDate(new Date())\n    },\n    updateDay (now: CalendarTimestamp, target: CalendarTimestamp): void {\n      if (now.date !== target.date) {\n        target.year = now.year\n        target.month = now.month\n        target.day = now.day\n        target.weekday = now.weekday\n        target.date = now.date\n      }\n    },\n    updateTime (now: CalendarTimestamp, target: CalendarTimestamp): void {\n      if (now.time !== target.time) {\n        target.hour = now.hour\n        target.minute = now.minute\n        target.time = now.time\n      }\n    },\n  },\n})\n","import { CalendarEventParsed, CalendarEventVisual, CalendarTimestamp } from 'vuetify/types'\nimport { getTimestampIdentifier } from '../util/timestamp'\n\nconst MILLIS_IN_DAY = 86400000\n\nexport type GetRange = (event: CalendarEventParsed) => [number, number]\n\nexport function getVisuals (events: CalendarEventParsed[], minStart = 0): CalendarEventVisual[] {\n  const visuals = events.map(event => ({\n    event,\n    columnCount: 0,\n    column: 0,\n    left: 0,\n    width: 100,\n  }))\n\n  visuals.sort((a, b) => {\n    return (Math.max(minStart, a.event.startTimestampIdentifier) - Math.max(minStart, b.event.startTimestampIdentifier)) ||\n           (b.event.endTimestampIdentifier - a.event.endTimestampIdentifier)\n  })\n\n  return visuals\n}\n\nexport interface ColumnGroup {\n  start: number\n  end: number\n  visuals: CalendarEventVisual[]\n}\n\nexport function hasOverlap (s0: number, e0: number, s1: number, e1: number, exclude = true): boolean {\n  return exclude ? !(s0 >= e1 || e0 <= s1) : !(s0 > e1 || e0 < s1)\n}\n\nexport function setColumnCount (groups: ColumnGroup[]) {\n  groups.forEach(group => {\n    group.visuals.forEach(groupVisual => {\n      groupVisual.columnCount = groups.length\n    })\n  })\n}\n\nexport function getRange (event: CalendarEventParsed): [number, number] {\n  return [event.startTimestampIdentifier, event.endTimestampIdentifier]\n}\n\nexport function getDayRange (event: CalendarEventParsed): [number, number] {\n  return [event.startIdentifier, event.endIdentifier]\n}\n\nexport function getNormalizedRange (event: CalendarEventParsed, dayStart: number): [number, number] {\n  return [Math.max(dayStart, event.startTimestampIdentifier), Math.min(dayStart + MILLIS_IN_DAY, event.endTimestampIdentifier)]\n}\n\nexport function getOpenGroup (groups: ColumnGroup[], start: number, end: number, timed: boolean) {\n  for (let i = 0; i < groups.length; i++) {\n    const group = groups[i]\n    let intersected = false\n\n    if (hasOverlap(start, end, group.start, group.end, timed)) {\n      for (let k = 0; k < group.visuals.length; k++) {\n        const groupVisual = group.visuals[k]\n        const [groupStart, groupEnd] = timed ? getRange(groupVisual.event) : getDayRange(groupVisual.event)\n\n        if (hasOverlap(start, end, groupStart, groupEnd, timed)) {\n          intersected = true\n          break\n        }\n      }\n    }\n\n    if (!intersected) {\n      return i\n    }\n  }\n\n  return -1\n}\n\nexport function getOverlapGroupHandler (firstWeekday: number) {\n  const handler = {\n    groups: [] as ColumnGroup[],\n    min: -1,\n    max: -1,\n    reset: () => {\n      handler.groups = []\n      handler.min = handler.max = -1\n    },\n    getVisuals: (day: CalendarTimestamp, dayEvents: CalendarEventParsed[], timed: boolean, reset = false) => {\n      if (day.weekday === firstWeekday || reset) {\n        handler.reset()\n      }\n\n      const dayStart = getTimestampIdentifier(day)\n      const visuals = getVisuals(dayEvents, dayStart)\n\n      visuals.forEach(visual => {\n        const [start, end] = timed ? getRange(visual.event) : getDayRange(visual.event)\n\n        if (handler.groups.length > 0 && !hasOverlap(start, end, handler.min, handler.max, timed)) {\n          setColumnCount(handler.groups)\n          handler.reset()\n        }\n\n        let targetGroup = getOpenGroup(handler.groups, start, end, timed)\n\n        if (targetGroup === -1) {\n          targetGroup = handler.groups.length\n\n          handler.groups.push({ start, end, visuals: [] })\n        }\n\n        const target = handler.groups[targetGroup]\n        target.visuals.push(visual)\n        target.start = Math.min(target.start, start)\n        target.end = Math.max(target.end, end)\n\n        visual.column = targetGroup\n\n        if (handler.min === -1) {\n          handler.min = start\n          handler.max = end\n        } else {\n          handler.min = Math.min(handler.min, start)\n          handler.max = Math.max(handler.max, end)\n        }\n      })\n\n      setColumnCount(handler.groups)\n\n      if (timed) {\n        handler.reset()\n      }\n\n      return visuals\n    },\n  }\n\n  return handler\n}\n","import { CalendarEventOverlapMode, CalendarEventVisual } from 'vuetify/types'\nimport { getOverlapGroupHandler, getVisuals, hasOverlap, getNormalizedRange } from './common'\nimport { getTimestampIdentifier } from '../util/timestamp'\n\ninterface Group {\n  start: number\n  end: number\n  visuals: CalendarEventVisual[]\n}\n\ninterface Node {\n  parent: Node | null\n  sibling: boolean\n  index: number\n  visual: CalendarEventVisual\n  start: number\n  end: number\n  children: Node[]\n}\n\nconst FULL_WIDTH = 100\n\nconst DEFAULT_OFFSET = 5\n\nconst WIDTH_MULTIPLIER = 1.7\n\n/**\n * Variation of column mode where events can be stacked. The priority of this\n * mode is to stack events together taking up the least amount of space while\n * trying to ensure the content of the event is always visible as well as its\n * start and end. A sibling column has intersecting event content and must be\n * placed beside each other. Non-sibling columns are offset by 5% from the\n * previous column. The width is scaled by 1.7 so the events overlap and\n * whitespace is reduced. If there is a hole in columns the event width is\n * scaled up so it intersects with the next column. The columns have equal\n * width in the space they are given. If the event doesn't have any to the\n * right of it that intersect with it's content it's right side is extended\n * to the right side.\n */\n\nexport const stack: CalendarEventOverlapMode = (events, firstWeekday, overlapThreshold) => {\n  const handler = getOverlapGroupHandler(firstWeekday)\n\n  // eslint-disable-next-line max-statements\n  return (day, dayEvents, timed, reset) => {\n    if (!timed) {\n      return handler.getVisuals(day, dayEvents, timed, reset)\n    }\n\n    const dayStart = getTimestampIdentifier(day)\n    const visuals = getVisuals(dayEvents, dayStart)\n    const groups = getGroups(visuals, dayStart)\n\n    for (const group of groups) {\n      const nodes: Node[] = []\n\n      for (const visual of group.visuals) {\n        const child = getNode(visual, dayStart)\n        const index = getNextIndex(child, nodes)\n\n        if (index === false) {\n          const parent = getParent(child, nodes)\n          if (parent) {\n            child.parent = parent\n            child.sibling = hasOverlap(child.start, child.end, parent.start, addTime(parent.start, overlapThreshold))\n            child.index = parent.index + 1\n            parent.children.push(child)\n          }\n        } else {\n          const [parent] = getOverlappingRange(child, nodes, index - 1, index - 1)\n          const children = getOverlappingRange(child, nodes, index + 1, index + nodes.length, true)\n\n          child.children = children\n          child.index = index\n\n          if (parent) {\n            child.parent = parent\n            child.sibling = hasOverlap(child.start, child.end, parent.start, addTime(parent.start, overlapThreshold))\n            parent.children.push(child)\n          }\n\n          for (const grand of children) {\n            if (grand.parent === parent) {\n              grand.parent = child\n            }\n\n            const grandNext = grand.index - child.index <= 1\n            if (grandNext && child.sibling &&\n              hasOverlap(child.start, addTime(child.start, overlapThreshold), grand.start, grand.end)) {\n              grand.sibling = true\n            }\n          }\n        }\n\n        nodes.push(child)\n      }\n\n      calculateBounds(nodes, overlapThreshold)\n    }\n\n    visuals.sort((a, b) => (a.left - b.left) || (a.event.startTimestampIdentifier - b.event.startTimestampIdentifier))\n\n    return visuals\n  }\n}\n\nfunction calculateBounds (nodes: Node[], overlapThreshold: number) {\n  for (const node of nodes) {\n    const { visual, parent } = node\n    const columns = getMaxChildIndex(node) + 1\n    const spaceLeft = parent ? parent.visual.left : 0\n    const spaceWidth = FULL_WIDTH - spaceLeft\n    const offset = Math.min(DEFAULT_OFFSET, FULL_WIDTH / columns)\n    const columnWidthMultiplier = getColumnWidthMultiplier(node, nodes)\n    const columnOffset = spaceWidth / (columns - node.index + 1)\n    const columnWidth = spaceWidth / (columns - node.index + (node.sibling ? 1 : 0)) * columnWidthMultiplier\n\n    if (parent) {\n      visual.left = node.sibling\n        ? spaceLeft + columnOffset\n        : spaceLeft + offset\n    }\n\n    visual.width = hasFullWidth(node, nodes, overlapThreshold)\n      ? FULL_WIDTH - visual.left\n      : Math.min(FULL_WIDTH - visual.left, columnWidth * WIDTH_MULTIPLIER)\n  }\n}\n\nfunction getColumnWidthMultiplier (node: Node, nodes: Node[]): number {\n  if (!node.children.length) {\n    return 1\n  }\n\n  const maxColumn = node.index + nodes.length\n  const minColumn = node.children.reduce((min, c) => Math.min(min, c.index), maxColumn)\n\n  return minColumn - node.index\n}\n\nfunction getOverlappingIndices (node: Node, nodes: Node[]): number[] {\n  const indices: number[] = []\n  for (const other of nodes) {\n    if (hasOverlap(node.start, node.end, other.start, other.end)) {\n      indices.push(other.index)\n    }\n  }\n  return indices\n}\n\nfunction getNextIndex (node: Node, nodes: Node[]): number | false {\n  const indices = getOverlappingIndices(node, nodes)\n  indices.sort()\n\n  for (let i = 0; i < indices.length; i++) {\n    if (i < indices[i]) {\n      return i\n    }\n  }\n  return false\n}\n\nfunction getOverlappingRange (node: Node, nodes: Node[], indexMin: number, indexMax: number, returnFirstColumn = false): Node[] {\n  const overlapping: Node[] = []\n  for (const other of nodes) {\n    if (other.index >= indexMin && other.index <= indexMax && hasOverlap(node.start, node.end, other.start, other.end)) {\n      overlapping.push(other)\n    }\n  }\n  if (returnFirstColumn && overlapping.length > 0) {\n    const first = overlapping.reduce((min, n) => Math.min(min, n.index), overlapping[0].index)\n    return overlapping.filter(n => n.index === first)\n  }\n  return overlapping\n}\n\nfunction getParent (node: Node, nodes: Node[]): Node | null {\n  let parent: Node | null = null\n  for (const other of nodes) {\n    if (hasOverlap(node.start, node.end, other.start, other.end) && (parent === null || other.index > parent.index)) {\n      parent = other\n    }\n  }\n  return parent\n}\n\nfunction hasFullWidth (node: Node, nodes: Node[], overlapThreshold: number): boolean {\n  for (const other of nodes) {\n    if (other !== node &&\n      other.index > node.index &&\n      hasOverlap(node.start, addTime(node.start, overlapThreshold), other.start, other.end)) {\n      return false\n    }\n  }\n\n  return true\n}\n\nfunction getGroups (visuals: CalendarEventVisual[], dayStart: number): Group[] {\n  const groups: Group[] = []\n\n  for (const visual of visuals) {\n    const [start, end] = getNormalizedRange(visual.event, dayStart)\n    let added = false\n\n    for (const group of groups) {\n      if (hasOverlap(start, end, group.start, group.end)) {\n        group.visuals.push(visual)\n        group.end = Math.max(group.end, end)\n        added = true\n        break\n      }\n    }\n\n    if (!added) {\n      groups.push({ start, end, visuals: [visual] })\n    }\n  }\n\n  return groups\n}\n\nfunction getNode (visual: CalendarEventVisual, dayStart: number): Node {\n  const [start, end] = getNormalizedRange(visual.event, dayStart)\n\n  return {\n    parent: null,\n    sibling: true,\n    index: 0,\n    visual,\n    start,\n    end,\n    children: [],\n  }\n}\n\nfunction getMaxChildIndex (node: Node): number {\n  let max = node.index\n  for (const child of node.children) {\n    const childMax = getMaxChildIndex(child)\n    if (childMax > max) {\n      max = childMax\n    }\n  }\n  return max\n}\n\nfunction addTime (identifier: number, minutes: number): number {\n  const removeMinutes = identifier % 100\n  const totalMinutes = removeMinutes + minutes\n  const addHours = Math.floor(totalMinutes / 60)\n  const addMinutes = totalMinutes % 60\n\n  return identifier - removeMinutes + addHours * 100 + addMinutes\n}\n","import { CalendarEventOverlapMode } from 'vuetify/types'\nimport { getOverlapGroupHandler } from './common'\n\nconst FULL_WIDTH = 100\n\nexport const column: CalendarEventOverlapMode = (events, firstWeekday, overlapThreshold) => {\n  const handler = getOverlapGroupHandler(firstWeekday)\n\n  return (day, dayEvents, timed, reset) => {\n    const visuals = handler.getVisuals(day, dayEvents, timed, reset)\n\n    if (timed) {\n      visuals.forEach(visual => {\n        visual.left = visual.column * FULL_WIDTH / visual.columnCount\n        visual.width = FULL_WIDTH / visual.columnCount\n      })\n    }\n\n    return visuals\n  }\n}\n","import { CalendarEventOverlapMode } from 'vuetify/types'\nimport { stack } from './stack'\nimport { column } from './column'\n\nexport const CalendarEventOverlapModes: Record<string, CalendarEventOverlapMode> = {\n  stack,\n  column,\n}\n","\nimport { validateTimestamp, parseDate, DAYS_IN_WEEK, validateTime } from './timestamp'\nimport { PropType } from 'vue'\nimport { CalendarEvent, CalendarFormatter, CalendarTimestamp, CalendarEventOverlapMode, CalendarEventNameFunction, CalendarEventColorFunction, CalendarEventCategoryFunction, CalendarEventTimedFunction } from 'vuetify/types'\nimport { CalendarEventOverlapModes } from '../modes'\nimport { PropValidator } from 'vue/types/options'\n\nexport default {\n  base: {\n    start: {\n      type: [String, Number, Date],\n      validate: validateTimestamp,\n      default: () => parseDate(new Date()).date,\n    },\n    end: {\n      type: [String, Number, Date],\n      validate: validateTimestamp,\n    },\n    weekdays: {\n      type: [Array, String] as PropType<number[] | string>,\n      default: () => [0, 1, 2, 3, 4, 5, 6],\n      validate: validateWeekdays,\n    },\n    hideHeader: {\n      type: Boolean,\n    },\n    shortWeekdays: {\n      type: Boolean,\n      default: true,\n    },\n    weekdayFormat: {\n      type: Function as PropType<CalendarFormatter>,\n      default: null,\n    },\n    dayFormat: {\n      type: Function as PropType<CalendarFormatter>,\n      default: null,\n    },\n  },\n  intervals: {\n    maxDays: {\n      type: Number,\n      default: 7,\n    },\n    shortIntervals: {\n      type: Boolean,\n      default: true,\n    },\n    intervalHeight: {\n      type: [Number, String],\n      default: 48,\n      validate: validateNumber,\n    },\n    intervalWidth: {\n      type: [Number, String],\n      default: 60,\n      validate: validateNumber,\n    },\n    intervalMinutes: {\n      type: [Number, String],\n      default: 60,\n      validate: validateNumber,\n    },\n    firstInterval: {\n      type: [Number, String],\n      default: 0,\n      validate: validateNumber,\n    },\n    firstTime: {\n      type: [Number, String, Object],\n      validate: validateTime,\n    },\n    intervalCount: {\n      type: [Number, String],\n      default: 24,\n      validate: validateNumber,\n    },\n    intervalFormat: {\n      type: Function as PropType<CalendarFormatter>,\n      default: null,\n    },\n    intervalStyle: {\n      type: Function as PropType<(interval: CalendarTimestamp) => object>,\n      default: null,\n    },\n    showIntervalLabel: {\n      type: Function as PropType<(interval: CalendarTimestamp) => boolean>,\n      default: null,\n    },\n  },\n  weeks: {\n    localeFirstDayOfYear: {\n      type: [String, Number],\n      default: 0,\n    },\n    minWeeks: {\n      validate: validateNumber,\n      default: 1,\n    },\n    shortMonths: {\n      type: Boolean,\n      default: true,\n    },\n    showMonthOnFirst: {\n      type: Boolean,\n      default: true,\n    },\n    showWeek: Boolean,\n    monthFormat: {\n      type: Function as PropType<CalendarFormatter>,\n      default: null,\n    },\n  },\n  calendar: {\n    type: {\n      type: String,\n      default: 'month',\n    },\n    value: {\n      type: [String, Number, Date] as PropType<string | number | Date>,\n      validate: validateTimestamp,\n    },\n  },\n  category: {\n    categories: {\n      type: [Array, String],\n      default: '',\n    },\n    categoryHideDynamic: {\n      type: Boolean,\n    },\n    categoryShowAll: {\n      type: Boolean,\n    },\n    categoryForInvalid: {\n      type: String,\n      default: '',\n    },\n    categoryDays: {\n      type: [Number, String],\n      default: 1,\n      validate: (x: any) => isFinite(parseInt(x)) && parseInt(x) > 0,\n    },\n  },\n  events: {\n    events: {\n      type: Array,\n      default: () => [],\n    } as PropValidator<CalendarEvent[]>,\n    eventStart: {\n      type: String,\n      default: 'start',\n    },\n    eventEnd: {\n      type: String,\n      default: 'end',\n    },\n    eventTimed: {\n      type: [String, Function] as PropType<string | CalendarEventTimedFunction>,\n      default: 'timed',\n    },\n    eventCategory: {\n      type: [String, Function] as PropType<string | CalendarEventCategoryFunction>,\n      default: 'category',\n    },\n    eventHeight: {\n      type: Number,\n      default: 20,\n    },\n    eventColor: {\n      type: [String, Function] as PropType<string | CalendarEventColorFunction>,\n      default: 'primary',\n    },\n    eventTextColor: {\n      type: [String, Function] as PropType<string | CalendarEventColorFunction>,\n      default: 'white',\n    },\n    eventName: {\n      type: [String, Function] as PropType<string | CalendarEventNameFunction>,\n      default: 'name',\n    },\n    eventOverlapThreshold: {\n      type: [String, Number],\n      default: 60,\n    },\n    eventOverlapMode: {\n      type: [String, Function],\n      default: 'stack',\n      validate: (mode: any) => mode in CalendarEventOverlapModes || typeof mode === 'function',\n    } as PropValidator<'stack' | 'column' | CalendarEventOverlapMode>,\n    eventMore: {\n      type: Boolean,\n      default: true,\n    },\n    eventMoreText: {\n      type: String,\n      default: '$vuetify.calendar.moreEvents',\n    },\n    eventRipple: {\n      type: [Boolean, Object],\n      default: null,\n    },\n    eventMarginBottom: {\n      type: Number,\n      default: 1,\n    },\n  },\n}\n\nexport function validateNumber (input: any): boolean {\n  return isFinite(parseInt(input))\n}\n\nexport function validateWeekdays (input: string | (number | string)[]): boolean {\n  if (typeof input === 'string') {\n    input = input.split(',')\n  }\n\n  if (Array.isArray(input)) {\n    const ints = input.map(x => parseInt(x))\n\n    if (ints.length > DAYS_IN_WEEK || ints.length === 0) {\n      return false\n    }\n\n    const visited: Record<number, boolean> = {}\n    let wrapped = false\n\n    for (let i = 0; i < ints.length; i++) {\n      const x = ints[i]\n\n      if (!isFinite(x) || x < 0 || x >= DAYS_IN_WEEK) {\n        return false\n      }\n\n      if (i > 0) {\n        const d = x - ints[i - 1]\n        if (d < 0) {\n          if (wrapped) {\n            return false\n          }\n          wrapped = true\n        } else if (d === 0) {\n          return false\n        }\n      }\n\n      if (visited[x]) {\n        return false\n      }\n      visited[x] = true\n    }\n\n    return true\n  }\n\n  return false\n}\n","\n// Mixins\nimport mixins from '../../../util/mixins'\nimport Colorable from '../../../mixins/colorable'\nimport Localable from '../../../mixins/localable'\nimport Mouse from './mouse'\nimport Themeable from '../../../mixins/themeable'\nimport Times from './times'\n\n// Directives\nimport Resize from '../../../directives/resize'\n\n// Util\nimport props from '../util/props'\nimport {\n  parseTimestamp,\n  getWeekdaySkips,\n  createDayList,\n  createNativeLocaleFormatter,\n  getStartOfWeek,\n  getEndOfWeek,\n  getTimestampIdentifier,\n} from '../util/timestamp'\nimport { CalendarTimestamp, CalendarFormatter } from 'vuetify/types'\n\nexport default mixins(\n  Colorable,\n  Localable,\n  Mouse,\n  Themeable,\n  Times\n/* @vue/component */\n).extend({\n  name: 'calendar-base',\n\n  directives: {\n    Resize,\n  },\n\n  props: props.base,\n\n  computed: {\n    parsedWeekdays (): number[] {\n      return Array.isArray(this.weekdays)\n        ? this.weekdays\n        : (this.weekdays || '').split(',').map(x => parseInt(x, 10))\n    },\n    weekdaySkips (): number[] {\n      return getWeekdaySkips(this.parsedWeekdays)\n    },\n    weekdaySkipsReverse (): number [] {\n      const reversed = this.weekdaySkips.slice()\n      reversed.reverse()\n      return reversed\n    },\n    parsedStart (): CalendarTimestamp {\n      return parseTimestamp(this.start, true)\n    },\n    parsedEnd (): CalendarTimestamp {\n      const start = this.parsedStart\n      const end: CalendarTimestamp = this.end ? parseTimestamp(this.end) || start : start\n\n      return getTimestampIdentifier(end) < getTimestampIdentifier(start) ? start : end\n    },\n    days (): CalendarTimestamp[] {\n      return createDayList(\n        this.parsedStart,\n        this.parsedEnd,\n        this.times.today,\n        this.weekdaySkips\n      )\n    },\n    dayFormatter (): CalendarFormatter {\n      if (this.dayFormat) {\n        return this.dayFormat as CalendarFormatter\n      }\n\n      const options = { timeZone: 'UTC', day: 'numeric' }\n\n      return createNativeLocaleFormatter(\n        this.currentLocale,\n        (_tms, _short) => options\n      )\n    },\n    weekdayFormatter (): CalendarFormatter {\n      if (this.weekdayFormat) {\n        return this.weekdayFormat as CalendarFormatter\n      }\n\n      const longOptions = { timeZone: 'UTC', weekday: 'long' }\n      const shortOptions = { timeZone: 'UTC', weekday: 'short' }\n\n      return createNativeLocaleFormatter(\n        this.currentLocale,\n        (_tms, short) => short ? shortOptions : longOptions\n      )\n    },\n  },\n\n  methods: {\n    getRelativeClasses (timestamp: CalendarTimestamp, outside = false): object {\n      return {\n        'v-present': timestamp.present,\n        'v-past': timestamp.past,\n        'v-future': timestamp.future,\n        'v-outside': outside,\n      }\n    },\n    getStartOfWeek (timestamp: CalendarTimestamp): CalendarTimestamp {\n      return getStartOfWeek(timestamp, this.parsedWeekdays, this.times.today)\n    },\n    getEndOfWeek (timestamp: CalendarTimestamp): CalendarTimestamp {\n      return getEndOfWeek(timestamp, this.parsedWeekdays, this.times.today)\n    },\n    getFormatter (options: object): CalendarFormatter {\n      return createNativeLocaleFormatter(\n        this.locale,\n        (_tms, _short) => options\n      )\n    },\n  },\n})\n","import {\n  parseTimestamp,\n  getDayIdentifier,\n  getTimestampIdentifier,\n  OFFSET_TIME,\n  isTimedless,\n  updateHasTime,\n} from './timestamp'\nimport { CalendarTimestamp, CalendarEvent, CalendarEventParsed } from 'vuetify/types'\n\nexport function parseEvent (\n  input: CalendarEvent,\n  index: number,\n  startProperty: string,\n  endProperty: string,\n  timed = false,\n  category: string | false = false,\n): CalendarEventParsed {\n  const startInput = input[startProperty]\n  const endInput = input[endProperty]\n  const startParsed: CalendarTimestamp = parseTimestamp(startInput, true)\n  const endParsed: CalendarTimestamp = (endInput ? parseTimestamp(endInput, true) : startParsed)\n  const start: CalendarTimestamp = isTimedless(startInput)\n    ? updateHasTime(startParsed, timed)\n    : startParsed\n  const end: CalendarTimestamp = isTimedless(endInput)\n    ? updateHasTime(endParsed, timed)\n    : endParsed\n  const startIdentifier: number = getDayIdentifier(start)\n  const startTimestampIdentifier: number = getTimestampIdentifier(start)\n  const endIdentifier: number = getDayIdentifier(end)\n  const endOffset: number = start.hasTime ? 0 : 2359\n  const endTimestampIdentifier: number = getTimestampIdentifier(end) + endOffset\n  const allDay = !start.hasTime\n\n  return { input, start, startIdentifier, startTimestampIdentifier, end, endIdentifier, endTimestampIdentifier, allDay, index, category }\n}\n\nexport function isEventOn (event: CalendarEventParsed, dayIdentifier: number): boolean {\n  return dayIdentifier >= event.startIdentifier &&\n    dayIdentifier <= event.endIdentifier &&\n    dayIdentifier * OFFSET_TIME !== event.endTimestampIdentifier\n}\n\nexport function isEventStart (event: CalendarEventParsed, day: CalendarTimestamp, dayIdentifier: number, firstWeekday: number): boolean {\n  return dayIdentifier === event.startIdentifier || (firstWeekday === day.weekday && isEventOn(event, dayIdentifier))\n}\n\nexport function isEventOverlapping (event: CalendarEventParsed, startIdentifier: number, endIdentifier: number): boolean {\n  return startIdentifier <= event.endIdentifier && endIdentifier >= event.startIdentifier\n}\n","// Styles\nimport './calendar-with-events.sass'\n\n// Types\nimport { VNode, VNodeData } from 'vue'\n\n// Directives\nimport ripple from '../../../directives/ripple'\n\n// Mixins\nimport CalendarBase from './calendar-base'\n\n// Helpers\nimport { escapeHTML } from '../../../util/helpers'\n\n// Util\nimport props from '../util/props'\nimport {\n  CalendarEventOverlapModes,\n} from '../modes'\nimport {\n  getDayIdentifier, diffMinutes,\n} from '../util/timestamp'\nimport {\n  parseEvent,\n  isEventStart,\n  isEventOn,\n  isEventOverlapping,\n} from '../util/events'\nimport {\n  CalendarTimestamp,\n  CalendarEventParsed,\n  CalendarEventVisual,\n  CalendarEventColorFunction,\n  CalendarEventNameFunction,\n  CalendarEventTimedFunction,\n  CalendarDaySlotScope,\n  CalendarDayBodySlotScope,\n  CalendarEventOverlapMode,\n  CalendarEvent,\n  CalendarEventCategoryFunction,\n} from 'vuetify/types'\n\n// Types\ntype VEventGetter<D> = (day: D) => CalendarEventParsed[]\n\ntype VEventVisualToNode<D> = (visual: CalendarEventVisual, day: D) => VNode | false\n\ntype VEventsToNodes = <D extends CalendarDaySlotScope>(\n  day: D,\n  getter: VEventGetter<D>,\n  mapper: VEventVisualToNode<D>,\n  timed: boolean) => VNode[] | undefined\n\ntype VDailyEventsMap = {\n  [date: string]: {\n    parent: HTMLElement\n    more: HTMLElement | null\n    events: HTMLElement[]\n  }\n}\n\ninterface VEventScopeInput {\n  eventParsed: CalendarEventParsed\n  day: CalendarDaySlotScope\n  start: boolean\n  end: boolean\n  timed: boolean\n}\n\nconst WIDTH_FULL = 100\nconst WIDTH_START = 95\nconst MINUTES_IN_DAY = 1440\n\n/* @vue/component */\nexport default CalendarBase.extend({\n  name: 'calendar-with-events',\n\n  directives: {\n    ripple,\n  },\n\n  props: props.events,\n\n  computed: {\n    noEvents (): boolean {\n      return this.events.length === 0\n    },\n    parsedEvents (): CalendarEventParsed[] {\n      return this.events.map(this.parseEvent)\n    },\n    parsedEventOverlapThreshold (): number {\n      return parseInt(this.eventOverlapThreshold)\n    },\n    eventColorFunction (): CalendarEventColorFunction {\n      return typeof this.eventColor === 'function'\n        ? this.eventColor\n        : () => (this.eventColor as string)\n    },\n    eventTimedFunction (): CalendarEventTimedFunction {\n      return typeof this.eventTimed === 'function'\n        ? this.eventTimed\n        : event => !!event[this.eventTimed as string]\n    },\n    eventCategoryFunction (): CalendarEventCategoryFunction {\n      return typeof this.eventCategory === 'function'\n        ? this.eventCategory\n        : event => event[this.eventCategory as string]\n    },\n    eventTextColorFunction (): CalendarEventColorFunction {\n      return typeof this.eventTextColor === 'function'\n        ? this.eventTextColor\n        : () => this.eventTextColor as string\n    },\n    eventNameFunction (): CalendarEventNameFunction {\n      return typeof this.eventName === 'function'\n        ? this.eventName\n        : (event, timedEvent) => escapeHTML(event.input[this.eventName as string] as string)\n    },\n    eventModeFunction (): CalendarEventOverlapMode {\n      return typeof this.eventOverlapMode === 'function'\n        ? this.eventOverlapMode\n        : CalendarEventOverlapModes[this.eventOverlapMode]\n    },\n    eventWeekdays (): number[] {\n      return this.parsedWeekdays\n    },\n    categoryMode (): boolean {\n      return false\n    },\n  },\n\n  methods: {\n    parseEvent (input: CalendarEvent, index = 0): CalendarEventParsed {\n      return parseEvent(\n        input,\n        index,\n        this.eventStart,\n        this.eventEnd,\n        this.eventTimedFunction(input),\n        this.categoryMode ? this.eventCategoryFunction(input) : false,\n      )\n    },\n    formatTime (withTime: CalendarTimestamp, ampm: boolean): string {\n      const formatter = this.getFormatter({\n        timeZone: 'UTC',\n        hour: 'numeric',\n        minute: withTime.minute > 0 ? 'numeric' : undefined,\n      })\n\n      return formatter(withTime, true)\n    },\n    updateEventVisibility () {\n      if (this.noEvents || !this.eventMore) {\n        return\n      }\n\n      const eventHeight = this.eventHeight\n      const eventsMap = this.getEventsMap()\n\n      for (const date in eventsMap) {\n        const { parent, events, more } = eventsMap[date]\n        if (!more) {\n          break\n        }\n\n        const parentBounds = parent.getBoundingClientRect()\n        const last = events.length - 1\n        let hide = false\n        let hidden = 0\n\n        for (let i = 0; i <= last; i++) {\n          if (!hide) {\n            const eventBounds = events[i].getBoundingClientRect()\n            hide = i === last\n              ? (eventBounds.bottom > parentBounds.bottom)\n              : (eventBounds.bottom + eventHeight > parentBounds.bottom)\n          }\n          if (hide) {\n            events[i].style.display = 'none'\n            hidden++\n          }\n        }\n\n        if (hide) {\n          more.style.display = ''\n          more.innerHTML = this.$vuetify.lang.t(this.eventMoreText, hidden)\n        } else {\n          more.style.display = 'none'\n        }\n      }\n    },\n    getEventsMap (): VDailyEventsMap {\n      const eventsMap: VDailyEventsMap = {}\n      const elements = this.$refs.events as HTMLElement[]\n\n      if (!elements || !elements.forEach) {\n        return eventsMap\n      }\n\n      elements.forEach(el => {\n        const date = el.getAttribute('data-date')\n        if (el.parentElement && date) {\n          if (!(date in eventsMap)) {\n            eventsMap[date] = {\n              parent: el.parentElement,\n              more: null,\n              events: [],\n            }\n          }\n          if (el.getAttribute('data-more')) {\n            eventsMap[date].more = el\n          } else {\n            eventsMap[date].events.push(el)\n            el.style.display = ''\n          }\n        }\n      })\n\n      return eventsMap\n    },\n    genDayEvent ({ event }: CalendarEventVisual, day: CalendarDaySlotScope): VNode {\n      const eventHeight = this.eventHeight\n      const eventMarginBottom = this.eventMarginBottom\n      const dayIdentifier = getDayIdentifier(day)\n      const week = day.week\n      const start = dayIdentifier === event.startIdentifier\n      let end = dayIdentifier === event.endIdentifier\n      let width = WIDTH_START\n\n      if (!this.categoryMode) {\n        for (let i = day.index + 1; i < week.length; i++) {\n          const weekdayIdentifier = getDayIdentifier(week[i])\n          if (event.endIdentifier >= weekdayIdentifier) {\n            width += WIDTH_FULL\n            end = end || weekdayIdentifier === event.endIdentifier\n          } else {\n            end = true\n            break\n          }\n        }\n      }\n      const scope = { eventParsed: event, day, start, end, timed: false }\n\n      return this.genEvent(event, scope, false, {\n        staticClass: 'v-event',\n        class: {\n          'v-event-start': start,\n          'v-event-end': end,\n        },\n        style: {\n          height: `${eventHeight}px`,\n          width: `${width}%`,\n          'margin-bottom': `${eventMarginBottom}px`,\n        },\n        attrs: {\n          'data-date': day.date,\n        },\n        key: event.index,\n        ref: 'events',\n        refInFor: true,\n      })\n    },\n    genTimedEvent ({ event, left, width }: CalendarEventVisual, day: CalendarDayBodySlotScope): VNode | false {\n      if (day.timeDelta(event.end) <= 0 || day.timeDelta(event.start) >= 1) {\n        return false\n      }\n\n      const dayIdentifier = getDayIdentifier(day)\n      const start = event.startIdentifier >= dayIdentifier\n      const end = event.endIdentifier > dayIdentifier\n      const top = start ? day.timeToY(event.start) : 0\n      const bottom = end ? day.timeToY(MINUTES_IN_DAY) : day.timeToY(event.end)\n      const height = Math.max(this.eventHeight, bottom - top)\n      const scope = { eventParsed: event, day, start, end, timed: true }\n\n      return this.genEvent(event, scope, true, {\n        staticClass: 'v-event-timed',\n        style: {\n          top: `${top}px`,\n          height: `${height}px`,\n          left: `${left}%`,\n          width: `${width}%`,\n        },\n      })\n    },\n    genEvent (event: CalendarEventParsed, scopeInput: VEventScopeInput, timedEvent: boolean, data: VNodeData): VNode {\n      const slot = this.$scopedSlots.event\n      const text = this.eventTextColorFunction(event.input)\n      const background = this.eventColorFunction(event.input)\n      const overlapsNoon = event.start.hour < 12 && event.end.hour >= 12\n      const singline = diffMinutes(event.start, event.end) <= this.parsedEventOverlapThreshold\n      const formatTime = this.formatTime\n      const timeSummary = () => formatTime(event.start, overlapsNoon) + ' - ' + formatTime(event.end, true)\n      const eventSummary = () => {\n        const name = this.eventNameFunction(event, timedEvent)\n\n        if (event.start.hasTime) {\n          if (timedEvent) {\n            const time = timeSummary()\n            const delimiter = singline ? ', ' : '<br>'\n\n            return `<strong>${name}</strong>${delimiter}${time}`\n          } else {\n            const time = formatTime(event.start, true)\n\n            return `<strong>${time}</strong> ${name}`\n          }\n        }\n\n        return name\n      }\n\n      const scope = {\n        ...scopeInput,\n        event: event.input,\n        outside: scopeInput.day.outside,\n        singline,\n        overlapsNoon,\n        formatTime,\n        timeSummary,\n        eventSummary,\n      }\n\n      return this.$createElement('div',\n        this.setTextColor(text,\n          this.setBackgroundColor(background, {\n            on: this.getDefaultMouseEventHandlers(':event', nativeEvent => ({ ...scope, nativeEvent })),\n            directives: [{\n              name: 'ripple',\n              value: this.eventRipple ?? true,\n            }],\n            ...data,\n          })\n        ), slot\n          ? slot(scope)\n          : [this.genName(eventSummary)]\n      )\n    },\n    genName (eventSummary: () => string): VNode {\n      return this.$createElement('div', {\n        staticClass: 'pl-1',\n        domProps: {\n          innerHTML: eventSummary(),\n        },\n      })\n    },\n    genPlaceholder (day: CalendarTimestamp): VNode {\n      const height = this.eventHeight + this.eventMarginBottom\n\n      return this.$createElement('div', {\n        style: {\n          height: `${height}px`,\n        },\n        attrs: {\n          'data-date': day.date,\n        },\n        ref: 'events',\n        refInFor: true,\n      })\n    },\n    genMore (day: CalendarDaySlotScope): VNode {\n      const eventHeight = this.eventHeight\n      const eventMarginBottom = this.eventMarginBottom\n\n      return this.$createElement('div', {\n        staticClass: 'v-event-more pl-1',\n        class: {\n          'v-outside': day.outside,\n        },\n        attrs: {\n          'data-date': day.date,\n          'data-more': 1,\n        },\n        directives: [{\n          name: 'ripple',\n          value: this.eventRipple ?? true,\n        }],\n        on: {\n          click: () => this.$emit('click:more', day),\n        },\n        style: {\n          display: 'none',\n          height: `${eventHeight}px`,\n          'margin-bottom': `${eventMarginBottom}px`,\n        },\n        ref: 'events',\n        refInFor: true,\n      })\n    },\n    getVisibleEvents (): CalendarEventParsed[] {\n      const start = getDayIdentifier(this.days[0])\n      const end = getDayIdentifier(this.days[this.days.length - 1])\n\n      return this.parsedEvents.filter(\n        event => isEventOverlapping(event, start, end)\n      )\n    },\n    isEventForCategory (event: CalendarEventParsed, category: string | undefined | null): boolean {\n      return !this.categoryMode ||\n        category === event.category ||\n        (typeof event.category !== 'string' && category === null)\n    },\n    getEventsForDay (day: CalendarDaySlotScope): CalendarEventParsed[] {\n      const identifier = getDayIdentifier(day)\n      const firstWeekday = this.eventWeekdays[0]\n\n      return this.parsedEvents.filter(\n        event => isEventStart(event, day, identifier, firstWeekday)\n      )\n    },\n    getEventsForDayAll (day: CalendarDaySlotScope): CalendarEventParsed[] {\n      const identifier = getDayIdentifier(day)\n      const firstWeekday = this.eventWeekdays[0]\n\n      return this.parsedEvents.filter(\n        event => event.allDay &&\n          (this.categoryMode ? isEventOn(event, identifier) : isEventStart(event, day, identifier, firstWeekday)) &&\n          this.isEventForCategory(event, day.category)\n      )\n    },\n    getEventsForDayTimed (day: CalendarDaySlotScope): CalendarEventParsed[] {\n      const identifier = getDayIdentifier(day)\n\n      return this.parsedEvents.filter(\n        event => !event.allDay &&\n          isEventOn(event, identifier) &&\n          this.isEventForCategory(event, day.category)\n      )\n    },\n    getScopedSlots () {\n      if (this.noEvents) {\n        return { ...this.$scopedSlots }\n      }\n\n      const mode = this.eventModeFunction(\n        this.parsedEvents,\n        this.eventWeekdays[0],\n        this.parsedEventOverlapThreshold\n      )\n\n      const isNode = (input: VNode | false): input is VNode => !!input\n      const getSlotChildren: VEventsToNodes = (day, getter, mapper, timed) => {\n        const events = getter(day)\n        const visuals = mode(day, events, timed, this.categoryMode)\n\n        if (timed) {\n          return visuals.map(visual => mapper(visual, day)).filter(isNode)\n        }\n\n        const children: VNode[] = []\n\n        visuals.forEach((visual, index) => {\n          while (children.length < visual.column) {\n            children.push(this.genPlaceholder(day))\n          }\n\n          const mapped = mapper(visual, day)\n          if (mapped) {\n            children.push(mapped)\n          }\n        })\n\n        return children\n      }\n\n      const slots = this.$scopedSlots\n      const slotDay = slots.day\n      const slotDayHeader = slots['day-header']\n      const slotDayBody = slots['day-body']\n\n      return {\n        ...slots,\n        day: (day: CalendarDaySlotScope) => {\n          let children = getSlotChildren(day, this.getEventsForDay, this.genDayEvent, false)\n          if (children && children.length > 0 && this.eventMore) {\n            children.push(this.genMore(day))\n          }\n          if (slotDay) {\n            const slot = slotDay(day)\n            if (slot) {\n              children = children ? children.concat(slot) : slot\n            }\n          }\n          return children\n        },\n        'day-header': (day: CalendarDaySlotScope) => {\n          let children = getSlotChildren(day, this.getEventsForDayAll, this.genDayEvent, false)\n\n          if (slotDayHeader) {\n            const slot = slotDayHeader(day)\n            if (slot) {\n              children = children ? children.concat(slot) : slot\n            }\n          }\n          return children\n        },\n        'day-body': (day: CalendarDayBodySlotScope) => {\n          const events = getSlotChildren(day, this.getEventsForDayTimed, this.genTimedEvent, true)\n          let children: VNode[] = [\n            this.$createElement('div', {\n              staticClass: 'v-event-timed-container',\n            }, events),\n          ]\n\n          if (slotDayBody) {\n            const slot = slotDayBody(day)\n            if (slot) {\n              children = children.concat(slot)\n            }\n          }\n          return children\n        },\n      }\n    },\n  },\n})\n","// Styles\nimport './VCalendarWeekly.sass'\n\n// Types\nimport { VNode } from 'vue'\n\n// Components\nimport VBtn from '../VBtn'\n\n// Mixins\nimport CalendarBase from './mixins/calendar-base'\n\n// Util\nimport { getSlot } from '../../util/helpers'\nimport { weekNumber } from '../../util/dateTimeUtils'\nimport props from './util/props'\nimport {\n  createDayList,\n  getDayIdentifier,\n  createNativeLocaleFormatter,\n} from './util/timestamp'\nimport { CalendarTimestamp, CalendarFormatter } from 'vuetify/types'\n\n/* @vue/component */\nexport default CalendarBase.extend({\n  name: 'v-calendar-weekly',\n\n  props: props.weeks,\n\n  computed: {\n    staticClass (): string {\n      return 'v-calendar-weekly'\n    },\n    classes (): object {\n      return this.themeClasses\n    },\n    parsedMinWeeks (): number {\n      return parseInt(this.minWeeks)\n    },\n    days (): CalendarTimestamp[] {\n      const minDays = this.parsedMinWeeks * this.parsedWeekdays.length\n      const start = this.getStartOfWeek(this.parsedStart)\n      const end = this.getEndOfWeek(this.parsedEnd)\n\n      return createDayList(\n        start,\n        end,\n        this.times.today,\n        this.weekdaySkips,\n        Number.MAX_SAFE_INTEGER,\n        minDays\n      )\n    },\n    todayWeek (): CalendarTimestamp[] {\n      const today = this.times.today\n      const start = this.getStartOfWeek(today)\n      const end = this.getEndOfWeek(today)\n\n      return createDayList(\n        start,\n        end,\n        today,\n        this.weekdaySkips,\n        this.parsedWeekdays.length,\n        this.parsedWeekdays.length\n      )\n    },\n    monthFormatter (): CalendarFormatter {\n      if (this.monthFormat) {\n        return this.monthFormat as CalendarFormatter\n      }\n\n      const longOptions = { timeZone: 'UTC', month: 'long' }\n      const shortOptions = { timeZone: 'UTC', month: 'short' }\n\n      return createNativeLocaleFormatter(\n        this.currentLocale,\n        (_tms, short) => short ? shortOptions : longOptions\n      )\n    },\n  },\n\n  methods: {\n    isOutside (day: CalendarTimestamp): boolean {\n      const dayIdentifier = getDayIdentifier(day)\n\n      return dayIdentifier < getDayIdentifier(this.parsedStart) ||\n             dayIdentifier > getDayIdentifier(this.parsedEnd)\n    },\n    genHead (): VNode {\n      return this.$createElement('div', {\n        staticClass: 'v-calendar-weekly__head',\n      }, this.genHeadDays())\n    },\n    genHeadDays (): VNode[] {\n      const header = this.todayWeek.map(this.genHeadDay)\n\n      if (this.showWeek) {\n        header.unshift(this.$createElement('div', {\n          staticClass: 'v-calendar-weekly__head-weeknumber',\n        }))\n      }\n\n      return header\n    },\n    genHeadDay (day: CalendarTimestamp, index: number): VNode {\n      const outside = this.isOutside(this.days[index])\n      const color = day.present ? this.color : undefined\n\n      return this.$createElement('div', this.setTextColor(color, {\n        key: day.date,\n        staticClass: 'v-calendar-weekly__head-weekday',\n        class: this.getRelativeClasses(day, outside),\n      }), this.weekdayFormatter(day, this.shortWeekdays))\n    },\n    genWeeks (): VNode[] {\n      const days = this.days\n      const weekDays = this.parsedWeekdays.length\n      const weeks: VNode[] = []\n\n      for (let i = 0; i < days.length; i += weekDays) {\n        weeks.push(this.genWeek(days.slice(i, i + weekDays), this.getWeekNumber(days[i])))\n      }\n\n      return weeks\n    },\n    genWeek (week: CalendarTimestamp[], weekNumber: number): VNode {\n      const weekNodes = week.map((day, index) => this.genDay(day, index, week))\n\n      if (this.showWeek) {\n        weekNodes.unshift(this.genWeekNumber(weekNumber))\n      }\n\n      return this.$createElement('div', {\n        key: week[0].date,\n        staticClass: 'v-calendar-weekly__week',\n      }, weekNodes)\n    },\n    getWeekNumber (determineDay: CalendarTimestamp) {\n      return weekNumber(\n        determineDay.year,\n        determineDay.month - 1,\n        determineDay.day,\n        this.parsedWeekdays[0],\n        parseInt(this.localeFirstDayOfYear)\n      )\n    },\n    genWeekNumber (weekNumber: number) {\n      return this.$createElement('div', {\n        staticClass: 'v-calendar-weekly__weeknumber',\n      }, [\n        this.$createElement('small', String(weekNumber)),\n      ])\n    },\n    genDay (day: CalendarTimestamp, index: number, week: CalendarTimestamp[]): VNode {\n      const outside = this.isOutside(day)\n\n      return this.$createElement('div', {\n        key: day.date,\n        staticClass: 'v-calendar-weekly__day',\n        class: this.getRelativeClasses(day, outside),\n        on: this.getDefaultMouseEventHandlers(':day', _e => day),\n      }, [\n        this.genDayLabel(day),\n        ...(getSlot(this, 'day', () => ({ outside, index, week, ...day })) || []),\n      ])\n    },\n    genDayLabel (day: CalendarTimestamp): VNode {\n      return this.$createElement('div', {\n        staticClass: 'v-calendar-weekly__day-label',\n      }, getSlot(this, 'day-label', day) || [this.genDayLabelButton(day)])\n    },\n    genDayLabelButton (day: CalendarTimestamp): VNode {\n      const color = day.present ? this.color : 'transparent'\n      const hasMonth = day.day === 1 && this.showMonthOnFirst\n\n      return this.$createElement(VBtn, {\n        props: {\n          color,\n          fab: true,\n          depressed: true,\n          small: true,\n        },\n        on: this.getMouseEventHandlers({\n          'click:date': { event: 'click', stop: true },\n          'contextmenu:date': { event: 'contextmenu', stop: true, prevent: true, result: false },\n        }, _e => day),\n      }, hasMonth\n        ? this.monthFormatter(day, this.shortMonths) + ' ' + this.dayFormatter(day, false)\n        : this.dayFormatter(day, false)\n      )\n    },\n    genDayMonth (day: CalendarTimestamp): VNode | string {\n      const color = day.present ? this.color : undefined\n\n      return this.$createElement('div', this.setTextColor(color, {\n        staticClass: 'v-calendar-weekly__day-month',\n      }), getSlot(this, 'day-month', day) || this.monthFormatter(day, this.shortMonths))\n    },\n  },\n\n  render (h): VNode {\n    return h('div', {\n      staticClass: this.staticClass,\n      class: this.classes,\n      on: {\n        dragstart: (e: MouseEvent) => {\n          e.preventDefault()\n        },\n      },\n    }, [\n      !this.hideHeader ? this.genHead() : '',\n      ...this.genWeeks(),\n    ])\n  },\n})\n","// Styles\nimport './VCalendarWeekly.sass'\n\n// Mixins\nimport VCalendarWeekly from './VCalendarWeekly'\n\n// Util\nimport { parseTimestamp, getStartOfMonth, getEndOfMonth } from './util/timestamp'\nimport { CalendarTimestamp } from 'vuetify/types'\n\n/* @vue/component */\nexport default VCalendarWeekly.extend({\n  name: 'v-calendar-monthly',\n\n  computed: {\n    staticClass (): string {\n      return 'v-calendar-monthly v-calendar-weekly'\n    },\n    parsedStart (): CalendarTimestamp {\n      return getStartOfMonth(parseTimestamp(this.start, true))\n    },\n    parsedEnd (): CalendarTimestamp {\n      return getEndOfMonth(parseTimestamp(this.end, true))\n    },\n  },\n\n})\n","\n// Mixins\nimport CalendarBase from './calendar-base'\n\n// Util\nimport props from '../util/props'\nimport {\n  parseTime,\n  copyTimestamp,\n  updateMinutes,\n  createDayList,\n  createIntervalList,\n  createNativeLocaleFormatter,\n  VTime,\n  MINUTES_IN_DAY,\n} from '../util/timestamp'\nimport { CalendarTimestamp, CalendarFormatter, CalendarDayBodySlotScope } from 'vuetify/types'\n\n/* @vue/component */\nexport default CalendarBase.extend({\n  name: 'calendar-with-intervals',\n\n  props: props.intervals,\n\n  computed: {\n    parsedFirstInterval (): number {\n      return parseInt(this.firstInterval)\n    },\n    parsedIntervalMinutes (): number {\n      return parseInt(this.intervalMinutes)\n    },\n    parsedIntervalCount (): number {\n      return parseInt(this.intervalCount)\n    },\n    parsedIntervalHeight (): number {\n      return parseFloat(this.intervalHeight)\n    },\n    parsedFirstTime (): number | false {\n      return parseTime(this.firstTime)\n    },\n    firstMinute (): number {\n      const time = this.parsedFirstTime\n\n      return time !== false && time >= 0 && time <= MINUTES_IN_DAY\n        ? time\n        : this.parsedFirstInterval * this.parsedIntervalMinutes\n    },\n    bodyHeight (): number {\n      return this.parsedIntervalCount * this.parsedIntervalHeight\n    },\n    days (): CalendarTimestamp[] {\n      return createDayList(\n        this.parsedStart,\n        this.parsedEnd,\n        this.times.today,\n        this.weekdaySkips,\n        this.maxDays\n      )\n    },\n    intervals (): CalendarTimestamp[][] {\n      const days: CalendarTimestamp[] = this.days\n      const first: number = this.firstMinute\n      const minutes: number = this.parsedIntervalMinutes\n      const count: number = this.parsedIntervalCount\n      const now: CalendarTimestamp = this.times.now\n\n      return days.map(d => createIntervalList(d, first, minutes, count, now))\n    },\n    intervalFormatter (): CalendarFormatter {\n      if (this.intervalFormat) {\n        return this.intervalFormat as CalendarFormatter\n      }\n\n      const longOptions = { timeZone: 'UTC', hour: '2-digit', minute: '2-digit' }\n      const shortOptions = { timeZone: 'UTC', hour: 'numeric', minute: '2-digit' }\n      const shortHourOptions = { timeZone: 'UTC', hour: 'numeric' }\n\n      return createNativeLocaleFormatter(\n        this.currentLocale,\n        (tms, short) => short ? (tms.minute === 0 ? shortHourOptions : shortOptions) : longOptions\n      )\n    },\n  },\n\n  methods: {\n    showIntervalLabelDefault (interval: CalendarTimestamp): boolean {\n      const first: CalendarTimestamp = this.intervals[0][0]\n      const isFirst: boolean = first.hour === interval.hour && first.minute === interval.minute\n      return !isFirst\n    },\n    intervalStyleDefault (_interval: CalendarTimestamp): object | undefined {\n      return undefined\n    },\n    getTimestampAtEvent (e: MouseEvent | TouchEvent, day: CalendarTimestamp): CalendarTimestamp {\n      const timestamp: CalendarTimestamp = copyTimestamp(day)\n      const bounds = (e.currentTarget as HTMLElement).getBoundingClientRect()\n      const baseMinutes: number = this.firstMinute\n      const touchEvent: TouchEvent = e as TouchEvent\n      const mouseEvent: MouseEvent = e as MouseEvent\n      const touches: TouchList = touchEvent.changedTouches || touchEvent.touches\n      const clientY: number = touches && touches[0] ? touches[0].clientY : mouseEvent.clientY\n      const addIntervals: number = (clientY - bounds.top) / this.parsedIntervalHeight\n      const addMinutes: number = Math.floor(addIntervals * this.parsedIntervalMinutes)\n      const minutes: number = baseMinutes + addMinutes\n\n      return updateMinutes(timestamp, minutes, this.times.now)\n    },\n    getSlotScope (timestamp: CalendarTimestamp): CalendarDayBodySlotScope {\n      const scope = copyTimestamp(timestamp) as any\n      scope.timeToY = this.timeToY\n      scope.timeDelta = this.timeDelta\n      scope.minutesToPixels = this.minutesToPixels\n      scope.week = this.days\n      return scope\n    },\n    scrollToTime (time: VTime): boolean {\n      const y = this.timeToY(time)\n      const pane = this.$refs.scrollArea as HTMLElement\n\n      if (y === false || !pane) {\n        return false\n      }\n\n      pane.scrollTop = y\n\n      return true\n    },\n    minutesToPixels (minutes: number): number {\n      return minutes / this.parsedIntervalMinutes * this.parsedIntervalHeight\n    },\n    timeToY (time: VTime, clamp = true): number | false {\n      let y = this.timeDelta(time)\n\n      if (y !== false) {\n        y *= this.bodyHeight\n\n        if (clamp) {\n          if (y < 0) {\n            y = 0\n          }\n          if (y > this.bodyHeight) {\n            y = this.bodyHeight\n          }\n        }\n      }\n\n      return y\n    },\n    timeDelta (time: VTime): number | false {\n      const minutes = parseTime(time)\n\n      if (minutes === false) {\n        return false\n      }\n\n      const min: number = this.firstMinute\n      const gap: number = this.parsedIntervalCount * this.parsedIntervalMinutes\n\n      return (minutes - min) / gap\n    },\n  },\n})\n","// Styles\nimport './VCalendarDaily.sass'\n\n// Types\nimport { VNode } from 'vue'\n\n// Directives\nimport Resize from '../../directives/resize'\n\n// Components\nimport VBtn from '../VBtn'\n\n// Mixins\nimport CalendarWithIntervals from './mixins/calendar-with-intervals'\n\n// Util\nimport { convertToUnit, getSlot } from '../../util/helpers'\nimport { CalendarTimestamp } from 'vuetify/types'\n\n/* @vue/component */\nexport default CalendarWithIntervals.extend({\n  name: 'v-calendar-daily',\n\n  directives: { Resize },\n\n  data: () => ({\n    scrollPush: 0,\n  }),\n\n  computed: {\n    classes (): object {\n      return {\n        'v-calendar-daily': true,\n        ...this.themeClasses,\n      }\n    },\n  },\n\n  mounted () {\n    this.init()\n  },\n\n  methods: {\n    init () {\n      this.$nextTick(this.onResize)\n    },\n    onResize () {\n      this.scrollPush = this.getScrollPush()\n    },\n    getScrollPush (): number {\n      const area = this.$refs.scrollArea as HTMLElement\n      const pane = this.$refs.pane as HTMLElement\n\n      return area && pane ? (area.offsetWidth - pane.offsetWidth) : 0\n    },\n    genHead (): VNode {\n      return this.$createElement('div', {\n        staticClass: 'v-calendar-daily__head',\n        style: {\n          marginRight: this.scrollPush + 'px',\n        },\n      }, [\n        this.genHeadIntervals(),\n        ...this.genHeadDays(),\n      ])\n    },\n    genHeadIntervals (): VNode {\n      const width: string | undefined = convertToUnit(this.intervalWidth)\n\n      return this.$createElement('div', {\n        staticClass: 'v-calendar-daily__intervals-head',\n        style: {\n          width,\n        },\n      }, getSlot(this, 'interval-header'))\n    },\n    genHeadDays (): VNode[] {\n      return this.days.map(this.genHeadDay)\n    },\n    genHeadDay (day: CalendarTimestamp, index: number): VNode {\n      return this.$createElement('div', {\n        key: day.date,\n        staticClass: 'v-calendar-daily_head-day',\n        class: this.getRelativeClasses(day),\n        on: this.getDefaultMouseEventHandlers(':day', _e => {\n          return this.getSlotScope(day)\n        }),\n      }, [\n        this.genHeadWeekday(day),\n        this.genHeadDayLabel(day),\n        ...this.genDayHeader(day, index),\n      ])\n    },\n    genDayHeader (day: CalendarTimestamp, index: number): VNode[] {\n      return getSlot(this, 'day-header', () => ({\n        week: this.days, ...day, index,\n      })) || []\n    },\n    genHeadWeekday (day: CalendarTimestamp): VNode {\n      const color = day.present ? this.color : undefined\n\n      return this.$createElement('div', this.setTextColor(color, {\n        staticClass: 'v-calendar-daily_head-weekday',\n      }), this.weekdayFormatter(day, this.shortWeekdays))\n    },\n    genHeadDayLabel (day: CalendarTimestamp): VNode {\n      return this.$createElement('div', {\n        staticClass: 'v-calendar-daily_head-day-label',\n      }, getSlot(this, 'day-label-header', day) || [this.genHeadDayButton(day)])\n    },\n    genHeadDayButton (day: CalendarTimestamp): VNode {\n      const color = day.present ? this.color : 'transparent'\n\n      return this.$createElement(VBtn, {\n        props: {\n          color,\n          fab: true,\n          depressed: true,\n        },\n        on: this.getMouseEventHandlers({\n          'click:date': { event: 'click', stop: true },\n          'contextmenu:date': { event: 'contextmenu', stop: true, prevent: true, result: false },\n        }, _e => {\n          return day\n        }),\n      }, this.dayFormatter(day, false))\n    },\n    genBody (): VNode {\n      return this.$createElement('div', {\n        staticClass: 'v-calendar-daily__body',\n      }, [\n        this.genScrollArea(),\n      ])\n    },\n    genScrollArea (): VNode {\n      return this.$createElement('div', {\n        ref: 'scrollArea',\n        staticClass: 'v-calendar-daily__scroll-area',\n      }, [\n        this.genPane(),\n      ])\n    },\n    genPane (): VNode {\n      return this.$createElement('div', {\n        ref: 'pane',\n        staticClass: 'v-calendar-daily__pane',\n        style: {\n          height: convertToUnit(this.bodyHeight),\n        },\n      }, [\n        this.genDayContainer(),\n      ])\n    },\n    genDayContainer (): VNode {\n      return this.$createElement('div', {\n        staticClass: 'v-calendar-daily__day-container',\n      }, [\n        this.genBodyIntervals(),\n        ...this.genDays(),\n      ])\n    },\n    genDays (): VNode[] {\n      return this.days.map(this.genDay)\n    },\n    genDay (day: CalendarTimestamp, index: number): VNode {\n      return this.$createElement('div', {\n        key: day.date,\n        staticClass: 'v-calendar-daily__day',\n        class: this.getRelativeClasses(day),\n        on: this.getDefaultMouseEventHandlers(':time', e => {\n          return this.getSlotScope(this.getTimestampAtEvent(e, day))\n        }),\n      }, [\n        ...this.genDayIntervals(index),\n        ...this.genDayBody(day),\n      ])\n    },\n    genDayBody (day: CalendarTimestamp): VNode[] {\n      return getSlot(this, 'day-body', () => this.getSlotScope(day)) || []\n    },\n    genDayIntervals (index: number): VNode[] {\n      return this.intervals[index].map(this.genDayInterval)\n    },\n    genDayInterval (interval: CalendarTimestamp): VNode {\n      const height: string | undefined = convertToUnit(this.intervalHeight)\n      const styler = this.intervalStyle || this.intervalStyleDefault\n\n      const data = {\n        key: interval.time,\n        staticClass: 'v-calendar-daily__day-interval',\n        style: {\n          height,\n          ...styler(interval),\n        },\n      }\n\n      const children = getSlot(this, 'interval', () => this.getSlotScope(interval))\n\n      return this.$createElement('div', data, children)\n    },\n    genBodyIntervals (): VNode {\n      const width: string | undefined = convertToUnit(this.intervalWidth)\n      const data = {\n        staticClass: 'v-calendar-daily__intervals-body',\n        style: {\n          width,\n        },\n        on: this.getDefaultMouseEventHandlers(':interval', e => {\n          return this.getTimestampAtEvent(e, this.parsedStart)\n        }),\n      }\n\n      return this.$createElement('div', data, this.genIntervalLabels())\n    },\n    genIntervalLabels (): VNode[] | null {\n      if (!this.intervals.length) return null\n\n      return this.intervals[0].map(this.genIntervalLabel)\n    },\n    genIntervalLabel (interval: CalendarTimestamp): VNode {\n      const height: string | undefined = convertToUnit(this.intervalHeight)\n      const short: boolean = this.shortIntervals\n      const shower = this.showIntervalLabel || this.showIntervalLabelDefault\n      const show = shower(interval)\n      const label = show ? this.intervalFormatter(interval, short) : undefined\n\n      return this.$createElement('div', {\n        key: interval.time,\n        staticClass: 'v-calendar-daily__interval',\n        style: {\n          height,\n        },\n      }, [\n        this.$createElement('div', {\n          staticClass: 'v-calendar-daily__interval-text',\n        }, label),\n      ])\n    },\n  },\n\n  render (h): VNode {\n    return h('div', {\n      class: this.classes,\n      on: {\n        dragstart: (e: MouseEvent) => {\n          e.preventDefault()\n        },\n      },\n      directives: [{\n        modifiers: { quiet: true },\n        name: 'resize',\n        value: this.onResize,\n      }],\n    }, [\n      !this.hideHeader ? this.genHead() : '',\n      this.genBody(),\n    ])\n  },\n})\n","// Styles\nimport './VCalendarCategory.sass'\n\n// Types\nimport { VNode } from 'vue'\n\n// Mixins\nimport VCalendarDaily from './VCalendarDaily'\n\n// Util\nimport { getSlot } from '../../util/helpers'\nimport { CalendarTimestamp } from 'types'\nimport props from './util/props'\n\n/* @vue/component */\nexport default VCalendarDaily.extend({\n  name: 'v-calendar-category',\n\n  props: props.category,\n\n  computed: {\n    classes (): object {\n      return {\n        'v-calendar-daily': true,\n        'v-calendar-category': true,\n        ...this.themeClasses,\n      }\n    },\n    parsedCategories (): string[] {\n      return typeof this.categories === 'string' && this.categories\n        ? this.categories.split(/\\s*,\\s*/)\n        : Array.isArray(this.categories)\n          ? this.categories as string[]\n          : []\n    },\n  },\n\n  methods: {\n    genDayHeader (day: CalendarTimestamp, index: number): VNode[] {\n      const data = {\n        staticClass: 'v-calendar-category__columns',\n      }\n      const scope = {\n        week: this.days, ...day, index,\n      }\n\n      const children = this.parsedCategories.map(category => this.genDayHeaderCategory(day, this.getCategoryScope(scope, category)))\n\n      return [this.$createElement('div', data, children)]\n    },\n    getCategoryScope (scope: any, category: string) {\n      return {\n        ...scope,\n        category: category === this.categoryForInvalid ? null : category,\n      }\n    },\n    genDayHeaderCategory (day: CalendarTimestamp, scope: any): VNode {\n      return this.$createElement('div', {\n        staticClass: 'v-calendar-category__column-header',\n        on: this.getDefaultMouseEventHandlers(':day-category', e => {\n          return this.getCategoryScope(this.getSlotScope(day), scope.category)\n        }),\n      }, [\n        getSlot(this, 'category', scope) || this.genDayHeaderCategoryTitle(scope.category),\n        getSlot(this, 'day-header', scope),\n      ])\n    },\n    genDayHeaderCategoryTitle (category: string) {\n      return this.$createElement('div', {\n        staticClass: 'v-calendar-category__category',\n      }, category === null ? this.categoryForInvalid : category)\n    },\n    genDayBody (day: CalendarTimestamp): VNode[] {\n      const data = {\n        staticClass: 'v-calendar-category__columns',\n      }\n\n      const children = this.parsedCategories.map(category => this.genDayBodyCategory(day, category))\n\n      return [this.$createElement('div', data, children)]\n    },\n    genDayBodyCategory (day: CalendarTimestamp, category: string): VNode {\n      const data = {\n        staticClass: 'v-calendar-category__column',\n        on: this.getDefaultMouseEventHandlers(':time-category', e => {\n          return this.getCategoryScope(this.getSlotScope(this.getTimestampAtEvent(e, day)), category)\n        }),\n      }\n\n      const children = getSlot(this, 'day-body', () => this.getCategoryScope(this.getSlotScope(day), category))\n\n      return this.$createElement('div', data, children)\n    },\n  },\n})\n","// Styles\n// import '../../stylus/components/_calendar-daily.styl'\n\n// Types\nimport { VNode, Component } from 'vue'\n\n// Mixins\nimport CalendarWithEvents from './mixins/calendar-with-events'\n\n// Util\nimport props from './util/props'\nimport {\n  DAYS_IN_MONTH_MAX,\n  DAY_MIN,\n  DAYS_IN_WEEK,\n  parseTimestamp,\n  validateTimestamp,\n  relativeDays,\n  nextDay,\n  prevDay,\n  copyTimestamp,\n  updateFormatted,\n  updateWeekday,\n  updateRelative,\n  getStartOfMonth,\n  getEndOfMonth,\n  VTime,\n  VTimestampInput,\n  timestampToDate,\n} from './util/timestamp'\n\n// Calendars\nimport VCalendarMonthly from './VCalendarMonthly'\nimport VCalendarDaily from './VCalendarDaily'\nimport VCalendarWeekly from './VCalendarWeekly'\nimport VCalendarCategory from './VCalendarCategory'\nimport { CalendarTimestamp, CalendarFormatter } from 'vuetify/types'\n\n// Types\ninterface VCalendarRenderProps {\n  start: CalendarTimestamp\n  end: CalendarTimestamp\n  component: string | Component\n  maxDays: number\n  weekdays: number[]\n  categories: string[]\n}\n\n/* @vue/component */\nexport default CalendarWithEvents.extend({\n  name: 'v-calendar',\n\n  props: {\n    ...props.calendar,\n    ...props.weeks,\n    ...props.intervals,\n    ...props.category,\n  },\n\n  data: () => ({\n    lastStart: null as CalendarTimestamp | null,\n    lastEnd: null as CalendarTimestamp | null,\n  }),\n\n  computed: {\n    parsedValue (): CalendarTimestamp {\n      return (validateTimestamp(this.value)\n        ? parseTimestamp(this.value, true)\n        : (this.parsedStart || this.times.today))\n    },\n    parsedCategoryDays (): number {\n      return parseInt(this.categoryDays) || 1\n    },\n    renderProps (): VCalendarRenderProps {\n      const around = this.parsedValue\n      let component: any = null\n      let maxDays = this.maxDays\n      let weekdays = this.parsedWeekdays\n      let categories = this.parsedCategories\n      let start = around\n      let end = around\n      switch (this.type) {\n        case 'month':\n          component = VCalendarMonthly\n          start = getStartOfMonth(around)\n          end = getEndOfMonth(around)\n          break\n        case 'week':\n          component = VCalendarDaily\n          start = this.getStartOfWeek(around)\n          end = this.getEndOfWeek(around)\n          maxDays = 7\n          break\n        case 'day':\n          component = VCalendarDaily\n          maxDays = 1\n          weekdays = [start.weekday]\n          break\n        case '4day':\n          component = VCalendarDaily\n          end = relativeDays(copyTimestamp(end), nextDay, 4)\n          updateFormatted(end)\n          maxDays = 4\n          weekdays = [\n            start.weekday,\n            (start.weekday + 1) % 7,\n            (start.weekday + 2) % 7,\n            (start.weekday + 3) % 7,\n          ]\n          break\n        case 'custom-weekly':\n          component = VCalendarWeekly\n          start = this.parsedStart || around\n          end = this.parsedEnd\n          break\n        case 'custom-daily':\n          component = VCalendarDaily\n          start = this.parsedStart || around\n          end = this.parsedEnd\n          break\n        case 'category':\n          const days = this.parsedCategoryDays\n\n          component = VCalendarCategory\n          end = relativeDays(copyTimestamp(end), nextDay, days)\n          updateFormatted(end)\n          maxDays = days\n          weekdays = []\n\n          for (let i = 0; i < days; i++) {\n            weekdays.push((start.weekday + i) % 7)\n          }\n\n          categories = this.getCategoryList(categories)\n          break\n        default:\n          throw new Error(this.type + ' is not a valid Calendar type')\n      }\n\n      return { component, start, end, maxDays, weekdays, categories }\n    },\n    eventWeekdays (): number[] {\n      return this.renderProps.weekdays\n    },\n    categoryMode (): boolean {\n      return this.type === 'category'\n    },\n    title (): string {\n      const { start, end } = this.renderProps\n      const spanYears = start.year !== end.year\n      const spanMonths = spanYears || start.month !== end.month\n\n      if (spanYears) {\n        return this.monthShortFormatter(start, true) + ' ' + start.year + ' - ' + this.monthShortFormatter(end, true) + ' ' + end.year\n      }\n\n      if (spanMonths) {\n        return this.monthShortFormatter(start, true) + ' - ' + this.monthShortFormatter(end, true) + ' ' + end.year\n      } else {\n        return this.monthLongFormatter(start, false) + ' ' + start.year\n      }\n    },\n    monthLongFormatter (): CalendarFormatter {\n      return this.getFormatter({\n        timeZone: 'UTC', month: 'long',\n      })\n    },\n    monthShortFormatter (): CalendarFormatter {\n      return this.getFormatter({\n        timeZone: 'UTC', month: 'short',\n      })\n    },\n    parsedCategories (): string[] {\n      return typeof this.categories === 'string' && this.categories\n        ? this.categories.split(/\\s*,\\s*/)\n        : Array.isArray(this.categories)\n          ? this.categories as string[]\n          : []\n    },\n  },\n\n  watch: {\n    renderProps: 'checkChange',\n  },\n\n  mounted () {\n    this.updateEventVisibility()\n    this.checkChange()\n  },\n\n  updated () {\n    window.requestAnimationFrame(this.updateEventVisibility)\n  },\n\n  methods: {\n    checkChange (): void {\n      const { lastStart, lastEnd } = this\n      const { start, end } = this.renderProps\n      if (!lastStart || !lastEnd ||\n        start.date !== lastStart.date ||\n        end.date !== lastEnd.date) {\n        this.lastStart = start\n        this.lastEnd = end\n        this.$emit('change', { start, end })\n      }\n    },\n    move (amount = 1): void {\n      const moved = copyTimestamp(this.parsedValue)\n      const forward = amount > 0\n      const mover = forward ? nextDay : prevDay\n      const limit = forward ? DAYS_IN_MONTH_MAX : DAY_MIN\n      let times = forward ? amount : -amount\n\n      while (--times >= 0) {\n        switch (this.type) {\n          case 'month':\n            moved.day = limit\n            mover(moved)\n            break\n          case 'week':\n            relativeDays(moved, mover, DAYS_IN_WEEK)\n            break\n          case 'day':\n            relativeDays(moved, mover, 1)\n            break\n          case '4day':\n            relativeDays(moved, mover, 4)\n            break\n          case 'category':\n            relativeDays(moved, mover, this.parsedCategoryDays)\n            break\n        }\n      }\n\n      updateWeekday(moved)\n      updateFormatted(moved)\n      updateRelative(moved, this.times.now)\n\n      if (this.value instanceof Date) {\n        this.$emit('input', timestampToDate(moved))\n      } else if (typeof this.value === 'number') {\n        this.$emit('input', timestampToDate(moved).getTime())\n      } else {\n        this.$emit('input', moved.date)\n      }\n\n      this.$emit('moved', moved)\n    },\n    next (amount = 1): void {\n      this.move(amount)\n    },\n    prev (amount = 1): void {\n      this.move(-amount)\n    },\n    timeToY (time: VTime, clamp = true): number | false {\n      const c = this.$children[0] as any\n\n      if (c && c.timeToY) {\n        return c.timeToY(time, clamp)\n      } else {\n        return false\n      }\n    },\n    timeDelta (time: VTime): number | false {\n      const c = this.$children[0] as any\n\n      if (c && c.timeDelta) {\n        return c.timeDelta(time)\n      } else {\n        return false\n      }\n    },\n    minutesToPixels (minutes: number): number {\n      const c = this.$children[0] as any\n\n      if (c && c.minutesToPixels) {\n        return c.minutesToPixels(minutes)\n      } else {\n        return -1\n      }\n    },\n    scrollToTime (time: VTime): boolean {\n      const c = this.$children[0] as any\n\n      if (c && c.scrollToTime) {\n        return c.scrollToTime(time)\n      } else {\n        return false\n      }\n    },\n    parseTimestamp (input: VTimestampInput, required?: false): CalendarTimestamp | null {\n      return parseTimestamp(input, required, this.times.now)\n    },\n    timestampToDate (timestamp: CalendarTimestamp): Date {\n      return timestampToDate(timestamp)\n    },\n    getCategoryList (categories: string[]): string[] {\n      if (!this.noEvents) {\n        const categoryMap = categories.reduce((map, category, index) => {\n          map[category] = { index, count: 0 }\n\n          return map\n        }, Object.create(null))\n\n        if (!this.categoryHideDynamic || !this.categoryShowAll) {\n          let categoryLength = categories.length\n\n          this.parsedEvents.forEach(ev => {\n            let category = ev.category\n\n            if (typeof category !== 'string') {\n              category = this.categoryForInvalid\n            }\n\n            if (!category) {\n              return\n            }\n\n            if (category in categoryMap) {\n              categoryMap[category].count++\n            } else if (!this.categoryHideDynamic) {\n              categoryMap[category] = {\n                index: categoryLength++,\n                count: 1,\n              }\n            }\n          })\n        }\n\n        if (!this.categoryShowAll) {\n          for (const category in categoryMap) {\n            if (categoryMap[category].count === 0) {\n              delete categoryMap[category]\n            }\n          }\n        }\n\n        categories = Object.keys(categoryMap)\n      }\n\n      return categories\n    },\n  },\n\n  render (h): VNode {\n    const { start, end, maxDays, component, weekdays, categories } = this.renderProps\n\n    return h(component, {\n      staticClass: 'v-calendar',\n      class: {\n        'v-calendar-events': !this.noEvents,\n      },\n      props: {\n        ...this.$props,\n        start: start.date,\n        end: end.date,\n        maxDays,\n        weekdays,\n        categories,\n      },\n      directives: [{\n        modifiers: { quiet: true },\n        name: 'resize',\n        value: this.updateEventVisibility,\n      }],\n      on: {\n        ...this.$listeners,\n        'click:date': (day: CalendarTimestamp) => {\n          if (this.$listeners.input) {\n            this.$emit('input', day.date)\n          }\n          if (this.$listeners['click:date']) {\n            this.$emit('click:date', day)\n          }\n        },\n      },\n      scopedSlots: this.getScopedSlots(),\n    })\n  },\n})\n","var $ = require('../internals/export');\n\n// `Number.MAX_SAFE_INTEGER` constant\n// https://tc39.github.io/ecma262/#sec-number.max_safe_integer\n$({ target: 'Number', stat: true }, {\n  MAX_SAFE_INTEGER: 0x1FFFFFFFFFFFFF\n});\n"],"sourceRoot":""}